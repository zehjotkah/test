import {
  Form,
  NavLink,
  Scripts,
  ScrollRestoration,
  useFetcher
} from "./chunk-SWF6OFGU.js";
import "./chunk-JPQHGWXI.js";
import "./chunk-DD4A45H3.js";
import {
  a,
  e
} from "./chunk-LVMGLQC4.js";
import {
  require_jsx_runtime
} from "./chunk-A7TAK4KR.js";
import {
  ReactSdkContext
} from "./chunk-OELOS3PU.js";
import {
  formBotFieldName,
  formIdFieldName
} from "./chunk-POFZVH7J.js";
import {
  require_react
} from "./chunk-OXMAUKK4.js";
import {
  __toESM
} from "./chunk-DC5AMYBS.js";

// node_modules/@webstudio-is/sdk-components-react-remix/lib/body.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react = __toESM(require_react(), 1);
var e2 = (0, import_react.forwardRef)(
  ({ children: r2, ...t2 }, i) => (0, import_jsx_runtime.jsxs)("body", { ...t2, ref: i, children: [
    r2,
    (0, import_jsx_runtime.jsx)(Scripts, {}),
    (0, import_jsx_runtime.jsx)(ScrollRestoration, {})
  ] })
);
e2.displayName = "Body";

// node_modules/@webstudio-is/sdk-components-react-remix/lib/shared/remix-link.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_react3 = __toESM(require_react(), 1);
var N = (r2) => {
  const o2 = (0, import_react3.forwardRef)((e3, n) => {
    const { assetBaseUrl: i, renderer: s3 } = (0, import_react3.useContext)(ReactSdkContext), t2 = String(e3.href ?? "");
    if (
      // remix appends ?index in runtime but not in ssr
      (t2 === "" || t2.startsWith("?") || t2.startsWith("#") || t2.startsWith("/") && t2.startsWith(i) === false) && s3 !== "canvas" && s3 !== "preview"
    )
      return (0, import_jsx_runtime2.jsx)(NavLink, { ...e3, to: t2, ref: n, end: true });
    const { prefetch: d, reloadDocument: h2, replace: u2, preventScrollReset: v3, ...m3 } = e3;
    return (0, import_jsx_runtime2.jsx)(r2, { ...m3, ref: n });
  });
  return o2.displayName = r2.displayName, o2;
};

// node_modules/@webstudio-is/sdk-components-react-remix/lib/link.js
var m2 = N(a);

// node_modules/@webstudio-is/sdk-components-react-remix/lib/rich-text-link.js
var r = N(e);

// node_modules/@webstudio-is/sdk-components-react-remix/lib/webhook-form.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var import_react5 = __toESM(require_react(), 1);
var x = (t2, e3) => {
  const c2 = (0, import_react5.useRef)(e3);
  c2.current = e3;
  const s3 = (0, import_react5.useRef)(t2);
  (0, import_react5.useEffect)(() => {
    s3.current.state !== t2.state && t2.state === "idle" && t2.data !== void 0 && c2.current(t2.data), s3.current = t2;
  }, [t2]);
};
var p = (t2, e3) => e3 === 0 ? t2 : p(e3, t2 % e3);
var R = (t2, e3) => {
  const c2 = p(t2, e3);
  return `${t2 / c2}/${e3 / c2}`;
};
var $ = () => {
  if (typeof matchMedia > "u")
    return true;
  const { width: t2, height: e3 } = screen, c2 = R(t2, e3), s3 = matchMedia(
    `(device-aspect-ratio: ${c2})`
  ).matches, o2 = matchMedia(
    `(device-width: ${t2}px) and (device-height: ${e3}px)`
  ).matches, a3 = matchMedia(
    `(device-width: ${t2 - 1}px) and (device-height: ${e3}px)`
  ).matches, n = matchMedia("(prefers-color-scheme: light)").matches, d = matchMedia("(prefers-color-scheme: dark)").matches;
  return (s3 && o2 && !a3 && n !== d) === false;
};
var A = (0, import_react5.forwardRef)(
  ({ children: t2, action: e3, method: c2, state: s3 = "initial", onStateChange: o2, ...a3 }, n) => {
    const d = useFetcher();
    x(d, (r2) => {
      const i = (r2 == null ? void 0 : r2.success) === true ? "success" : "error";
      o2 == null || o2(i);
    });
    const m3 = (r2) => {
      const i = document.createElement("input");
      i.type = "hidden", i.name = formBotFieldName, i.value = $() ? "jsdom" : Date.now().toString(16), r2.currentTarget.appendChild(i);
    };
    return (0, import_jsx_runtime3.jsxs)(
      d.Form,
      {
        ...a3,
        method: "post",
        "data-state": s3,
        ref: n,
        onSubmit: m3,
        children: [
          (0, import_jsx_runtime3.jsx)(
            "input",
            {
              type: "hidden",
              name: formIdFieldName,
              value: e3 == null ? void 0 : e3.toString()
            }
          ),
          t2
        ]
      }
    );
  }
);
A.displayName = "WebhookForm";

// node_modules/@webstudio-is/sdk-components-react-remix/lib/remix-form.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
var import_react7 = __toESM(require_react(), 1);
var v2 = (0, import_react7.forwardRef)(({ action: r2, ...e3 }, m3) => {
  const { renderer: o2 } = (0, import_react7.useContext)(ReactSdkContext);
  return (r2 === void 0 || r2 === "" || typeof r2 == "string" && (r2 != null && r2.startsWith("/"))) && o2 !== "canvas" && o2 !== "preview" ? (0, import_jsx_runtime4.jsx)(
    Form,
    {
      action: r2,
      ...e3,
      ref: m3,
      preventScrollReset: r2 === void 0 || r2 === ""
    }
  ) : (0, import_jsx_runtime4.jsx)("form", { ...e3, ref: m3 });
});
v2.displayName = "Form";
export {
  e2 as Body,
  A as Form,
  m2 as Link,
  v2 as RemixForm,
  r as RichTextLink
};
//# sourceMappingURL=@webstudio-is_sdk-components-react-remix.js.map
