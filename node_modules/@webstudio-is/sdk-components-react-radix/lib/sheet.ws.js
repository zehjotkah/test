import { HamburgerMenuIcon as o, LargeXIcon as p } from "@webstudio-is/icons/svg";
import { fixed as m, inset as g, z as l, bg as t, backdropBlur as d, flex as e, overflow as y, w as a, gap as r, border as i, p as u, shadow as h, relative as b, mr as f, maxW as v, grow as x, my as c, leading as S, text as n, tracking as D, absolute as T, right as B, top as k, rounded as C, opacity as s, items as H, justify as w, h as I, outline as E, hover as M, focus as O, ring as j } from "./theme/tailwind-classes.js";
import { getButtonStyles as z } from "./theme/styles.js";
const U = {
  category: "radix",
  order: 1,
  type: "container",
  icon: o,
  stylable: !1,
  description: "Displays content in a menu that slides out from the side of the screen, triggered by a button. Use this component for a typical mobile hamburger menu.",
  template: [
    {
      type: "instance",
      component: "Dialog",
      label: "Sheet",
      props: [],
      children: [
        {
          type: "instance",
          component: "DialogTrigger",
          label: "Sheet Trigger",
          children: [
            {
              type: "instance",
              component: "Button",
              styles: z("ghost", "icon"),
              children: [
                {
                  type: "instance",
                  component: "HtmlEmbed",
                  label: "Hamburger Menu Svg",
                  props: [
                    {
                      type: "string",
                      name: "code",
                      value: o
                    }
                  ],
                  children: []
                }
              ]
            }
          ]
        },
        {
          type: "instance",
          component: "DialogOverlay",
          label: "Sheet Overlay",
          /**
           * fixed inset-0 z-50 bg-background/80 backdrop-blur-sm
           * flex
           **/
          styles: [
            m(),
            g(0),
            l(50),
            t("background", 80),
            d("sm"),
            // To allow positioning Content
            e(),
            e("col"),
            y("auto")
          ].flat(),
          children: [
            {
              type: "instance",
              component: "DialogContent",
              label: "Sheet Content",
              /**
               * fixed w-full z-50
               * grid gap-4 max-w-lg
               * m-auto
               * border bg-background p-6 shadow-lg
               **/
              styles: [
                a("full"),
                l(50),
                e(),
                e("col"),
                r(4),
                i(),
                t("background"),
                u(6),
                h("lg"),
                b(),
                // side=left
                f("auto"),
                v("sm"),
                x()
              ].flat(),
              children: [
                {
                  type: "instance",
                  component: "Box",
                  label: "Navigation",
                  props: [
                    { name: "tag", type: "string", value: "nav" },
                    { name: "role", type: "string", value: "navigation" }
                  ],
                  children: [
                    {
                      type: "instance",
                      component: "Box",
                      label: "Sheet Header",
                      styles: [e(), e("col"), r(1)].flat(),
                      children: [
                        {
                          type: "instance",
                          component: "DialogTitle",
                          label: "Sheet Title",
                          /**
                           * text-lg leading-none tracking-tight
                           **/
                          styles: [
                            c(0),
                            S("none"),
                            n("lg"),
                            D("tight")
                          ].flat(),
                          children: [
                            {
                              type: "text",
                              value: "Sheet Title",
                              placeholder: !0
                            }
                          ]
                        },
                        {
                          type: "instance",
                          component: "DialogDescription",
                          label: "Sheet Description",
                          /**
                           * text-sm text-muted-foreground
                           **/
                          styles: [
                            c(0),
                            n("sm"),
                            n("mutedForeground")
                          ].flat(),
                          children: [
                            {
                              type: "text",
                              value: "Sheet description text you can edit",
                              placeholder: !0
                            }
                          ]
                        }
                      ]
                    },
                    {
                      type: "instance",
                      component: "Text",
                      children: [
                        {
                          type: "text",
                          value: "The text you can edit",
                          placeholder: !0
                        }
                      ]
                    }
                  ]
                },
                {
                  type: "instance",
                  component: "DialogClose",
                  label: "Close Button",
                  /**
                   * absolute right-4 top-4
                   * rounded-sm opacity-70
                   * ring-offset-background
                   * hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2
                   * flex items-center justify-center h-4 w-4
                   **/
                  styles: [
                    T(),
                    B(4),
                    k(4),
                    C("sm"),
                    s(70),
                    e(),
                    H("center"),
                    w("center"),
                    I(4),
                    a(4),
                    i(0),
                    t("transparent"),
                    E(),
                    M(s(100)),
                    O(j("ring", 2, "background", 2))
                  ].flat(),
                  children: [
                    {
                      type: "instance",
                      component: "HtmlEmbed",
                      label: "Close Icon",
                      props: [
                        {
                          type: "string",
                          name: "code",
                          value: p
                        }
                      ],
                      children: []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
};
export {
  U as meta
};
