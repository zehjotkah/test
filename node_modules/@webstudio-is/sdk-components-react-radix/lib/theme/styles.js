import { border as o, bg as e, inlineFlex as d, items as p, justify as y, rounded as g, text as n, font as b, focusVisible as m, outline as v, ring as k, state as l, pointerEvents as h, opacity as x, h as u, w, px as f, py as i, p as F } from "./tailwind-classes.js";
const j = (c, r = "default") => {
  const s = [
    // 'inline-flex items-center justify-center rounded-md text-sm font-medium
    // ring-offset-background transition-colors
    // focus-visible:outline-none focus-visible:ring-2
    // focus-visible:ring-ring focus-visible:ring-offset-2
    // disabled:pointer-events-none disabled:opacity-50'
    o(0),
    e("transparent"),
    d(),
    p("center"),
    y("center"),
    g("md"),
    n("sm"),
    b("medium"),
    n("current"),
    m(
      [v(), k("ring", 2, "background", 2)].flat()
    ),
    l([h("none"), x(50)].flat(), ":disabled")
  ].flat();
  let a = [];
  c === "ghost" && (a = [
    l([e("accent"), n("accentForeground")].flat(), ":hover")
  ].flat()), c === "outline" && (a = [
    o(),
    o("input"),
    e("background"),
    l(
      [e("accent", 90), n("accentForeground")].flat(),
      ":hover"
    )
  ].flat());
  let t = [];
  return r === "icon" && (t = [u(10), w(10), f(1.5), i(0)].flat()), r === "sm" && (t = [u(10), f(3)].flat()), r === "default" && (t = [u(10), f(4), i(2)].flat()), [...s, ...a, ...t];
}, B = [
  {
    property: "backgroundColor",
    value: { type: "keyword", value: "transparent" }
  },
  {
    property: "backgroundImage",
    value: { type: "keyword", value: "none" }
  },
  o(0),
  F(0)
].flat();
export {
  B as buttonReset,
  j as getButtonStyles
};
