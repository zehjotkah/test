import { type ReactNode } from "react";
import * as PopoverPrimitive from "@radix-ui/react-popover";
import { type Hook } from "@webstudio-is/react-sdk/runtime";
export declare const Popover: import("react").ForwardRefExoticComponent<Omit<PopoverPrimitive.PopoverProps, "defaultOpen"> & import("react").RefAttributes<HTMLDivElement>>;
/**
 * We're not exposing the 'asChild' property for the Trigger.
 * Instead, we're enforcing 'asChild=true' for the Trigger and making it style-less.
 * This avoids situations where the Trigger inadvertently passes all styles to its child,
 * which would prevent us from displaying styles properly in the builder.
 */
export declare const PopoverTrigger: import("react").ForwardRefExoticComponent<{
    children: ReactNode;
} & import("react").RefAttributes<HTMLButtonElement>>;
export declare const PopoverContent: import("react").ForwardRefExoticComponent<Omit<PopoverPrimitive.PopoverContentProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
export declare const hooksPopover: Hook;
