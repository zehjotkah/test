import { NavigationMenuIcon as x, ListIcon as w, ListItemIcon as I, TriggerIcon as k, ContentIcon as L, BoxIcon as C, ViewportIcon as A, ChevronDownIcon as T } from "@webstudio-is/icons/svg";
import { div as B } from "@webstudio-is/sdk/normalize.css";
import { relative as m, maxW as $, p as a, m as h, flex as n, list as V, items as q, justify as g, gap as s, bg as r, w as c, rounded as d, absolute as v, left as y, top as f, mt as D, overflow as F, border as S, text as t, shadow as W, property as i, noUnderline as M, state as E, ml as P, h as j, shrink as H, transition as U, duration as _, select as z, leading as l, outline as G, hover as J, focus as K, font as O, lineClamp as Q } from "./theme/tailwind-classes.js";
import { getButtonStyles as N } from "./theme/styles.js";
import { propsNavigationMenu as R, propsNavigationMenuItem as X, propsNavigationMenuTrigger as Y, propsNavigationMenuContent as Z, propsNavigationMenuLink as ee, propsNavigationMenuList as te, propsNavigationMenuViewport as ne } from "./__generated__/navigation-menu.props.js";
const o = {
  div: B
}, oe = [
  {
    title: "Sheet",
    href: "/docs/components/sheet",
    description: "Extends the Dialog component to display content that complements the main content of the screen."
  },
  {
    title: "Navigation Menu",
    href: "/docs/components/navigation-menu",
    description: "A collection of links for navigating websites."
  },
  {
    title: "Tabs",
    href: "/docs/components/tabs",
    description: "A set of layered sections of content—known as tab panels—that are displayed one at a time."
  },
  {
    title: "Accordion",
    href: "/docs/components/accordion",
    description: "A vertically stacked set of interactive headings that each reveal a section of content."
  },
  {
    title: "Dialog",
    href: "/docs/components/dialog",
    description: "A window overlaid on either the primary window or another dialog window, rendering the content underneath inert."
  },
  {
    title: "Collapsible",
    href: "/docs/components/collapsible",
    description: "An interactive component which expands/collapses a panel."
  },
  {
    title: "Popover",
    href: "/docs/components/popover",
    description: "Displays rich content in a portal, triggered by a button."
  },
  {
    title: "Tooltip",
    href: "/docs/components/tooltip",
    description: "A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it."
  },
  {
    title: "Button",
    href: "/docs/components/button",
    description: "Displays a button or a component that looks like a button."
  }
], ie = (e) => [
  {
    type: "instance",
    component: "NavigationMenuLink",
    children: [
      {
        type: "instance",
        component: "Link",
        // block select-none space-y-1 rounded-md p-3 leading-none
        // no-underline outline-none transition-colors
        // hover:bg-accent hover:text-accent-foreground
        // focus:bg-accent focus:text-accent-foreground
        styles: [
          t("inherit"),
          n(),
          n("col"),
          z(),
          s(1),
          d("md"),
          a(3),
          l("none"),
          M(),
          G(),
          J([r("accent"), t("accentForeground")].flat()),
          K([r("accent"), t("accentForeground")].flat())
        ].flat(),
        props: [
          {
            name: "href",
            type: "string",
            value: `https://ui.shadcn.com${e.href}`
          }
        ],
        children: [
          {
            type: "instance",
            component: "Text",
            // text-sm font-medium leading-none
            styles: [
              t("sm"),
              O("medium"),
              l("none")
            ].flat(),
            children: [
              {
                type: "text",
                value: e.title,
                placeholder: !0
              }
            ]
          },
          {
            type: "instance",
            component: "Paragraph",
            // line-clamp-2 text-sm leading-snug text-muted-foreground
            styles: [
              h(0),
              Q(2),
              t("sm"),
              l("snug"),
              t("mutedForeground")
            ].flat(),
            children: [
              {
                type: "text",
                value: e.description,
                placeholder: !0
              }
            ]
          }
        ]
      }
    ]
  }
], p = (e) => [
  {
    type: "instance",
    component: "Box",
    label: "Flex Column",
    styles: [c(64), n(), s(4), n("col")].flat(),
    children: Array.from(
      Array(e.count),
      (re, b) => ie(oe[b + e.offset])
    ).flat()
  }
], ae = (e) => [
  {
    type: "instance",
    component: "NavigationMenuItem",
    children: [
      {
        type: "instance",
        component: "NavigationMenuLink",
        children: [
          {
            type: "instance",
            component: "Link",
            styles: [
              N("ghost", "sm"),
              M(),
              t("current")
            ].flat(),
            children: [{ type: "text", value: e.title, placeholder: !0 }]
          }
        ]
      }
    ]
  }
], u = (e) => [
  {
    type: "instance",
    component: "NavigationMenuItem",
    children: [
      {
        type: "instance",
        component: "NavigationMenuTrigger",
        children: [
          {
            type: "instance",
            component: "Button",
            styles: [
              N("ghost", "sm"),
              i("--navigation-menu-trigger-icon-transform", "0deg"),
              E(
                [
                  i(
                    "--navigation-menu-trigger-icon-transform",
                    "180deg"
                  )
                ],
                "[data-state=open]"
              )
            ].flat(),
            children: [
              {
                type: "instance",
                component: "Text",
                children: [
                  { type: "text", value: e.title, placeholder: !0 }
                ]
              },
              {
                type: "instance",
                component: "Box",
                label: "Icon Container",
                // h-4 w-4 shrink-0 transition-transform duration-200
                styles: [
                  P(1),
                  i(
                    "rotate",
                    "--navigation-menu-trigger-icon-transform"
                  ),
                  j(4),
                  c(4),
                  H(0),
                  U("all"),
                  _(200)
                ].flat(),
                children: [
                  {
                    type: "instance",
                    component: "HtmlEmbed",
                    label: "Chevron Icon",
                    props: [
                      {
                        type: "string",
                        name: "code",
                        value: T
                      }
                    ],
                    children: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        type: "instance",
        component: "NavigationMenuContent",
        // left-0 top-0 absolute w-max
        styles: [
          y(0),
          f(0),
          v(),
          c("max"),
          a(4)
        ].flat(),
        children: [
          {
            type: "instance",
            component: "Box",
            label: "Content",
            styles: [n(), s(4), a(e.padding)].flat(),
            children: e.children
          }
        ]
      }
    ]
  }
], me = {
  category: "radix",
  order: 2,
  type: "container",
  description: "A collection of links for navigating websites.",
  icon: x,
  presetStyle: o,
  template: [
    {
      type: "instance",
      component: "NavigationMenu",
      props: [],
      // relative
      // Omiting this: z-10 flex max-w-max flex-1 items-center justify-center
      styles: [m(), $("max")].flat(),
      children: [
        {
          type: "instance",
          component: "NavigationMenuList",
          styles: [
            // ul defaults in tailwind
            a(0),
            h(0),
            // shadcdn styles
            n(),
            n(1),
            V("none"),
            q("center"),
            g("center"),
            s(1)
          ].flat(),
          children: [
            ...u({
              title: "About",
              padding: 2,
              children: [
                {
                  type: "instance",
                  component: "Box",
                  styles: [
                    r("border"),
                    a(4),
                    c(48),
                    d("md")
                  ].flat(),
                  children: [
                    {
                      type: "text",
                      value: "",
                      placeholder: !0
                    }
                  ]
                },
                ...p({ count: 3, offset: 0 })
              ]
            }),
            ...u({
              title: "Components",
              padding: 0,
              children: [
                ...p({ count: 3, offset: 3 }),
                ...p({ count: 3, offset: 6 })
              ]
            }),
            ...ae({ title: "Standalone" })
          ]
        },
        {
          type: "instance",
          component: "Box",
          label: "Viewport Container",
          // absolute left-0 top-full flex justify-center
          styles: [
            v(),
            y(0),
            f("full"),
            n(),
            g("center")
          ].flat(),
          children: [
            {
              type: "instance",
              component: "NavigationMenuViewport",
              /*
                origin-top-center relative mt-1.5 w-full
                overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg
                h-[var(--radix-navigation-menu-viewport-height)]
                w-[var(--radix-navigation-menu-viewport-width)]
                // anims
                [animation-duration:150ms!important] [transition-duration:150ms!important]
                data-[state=open]:animate-in data-[state=closed]:animate-out
                data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90
              */
              styles: [
                m(),
                D(1.5),
                F("hidden"),
                d("md"),
                S(),
                r("popover"),
                t("popoverForeground"),
                W("lg"),
                i(
                  "height",
                  "--radix-navigation-menu-viewport-height"
                ),
                i("width", "--radix-navigation-menu-viewport-width")
              ].flat(),
              children: []
            }
          ]
        }
      ]
    }
  ]
}, ge = {
  category: "hidden",
  detachable: !1,
  type: "container",
  icon: w,
  constraints: {
    relation: "ancestor",
    component: { $eq: "NavigationMenu" }
  },
  presetStyle: o,
  label: "Menu List"
}, ue = {
  category: "hidden",
  type: "container",
  icon: I,
  constraints: {
    relation: "ancestor",
    component: { $eq: "NavigationMenu" }
  },
  presetStyle: o,
  indexWithinAncestor: "NavigationMenu",
  label: "Menu Item"
}, he = {
  category: "hidden",
  detachable: !1,
  stylable: !1,
  type: "container",
  icon: k,
  constraints: {
    relation: "ancestor",
    component: { $eq: "NavigationMenuItem" }
  },
  presetStyle: o,
  label: "Menu Trigger"
}, ve = {
  category: "hidden",
  detachable: !1,
  type: "container",
  icon: L,
  constraints: {
    relation: "ancestor",
    component: { $eq: "NavigationMenuItem" }
  },
  indexWithinAncestor: "NavigationMenu",
  presetStyle: o,
  label: "Menu Content"
}, ye = {
  category: "hidden",
  detachable: !0,
  type: "container",
  stylable: !1,
  icon: C,
  constraints: [
    {
      relation: "ancestor",
      component: { $eq: "NavigationMenu" }
    },
    {
      relation: "ancestor",
      component: { $in: ["NavigationMenuContent", "NavigationMenuItem"] }
    }
  ],
  presetStyle: o,
  label: "Accessible Link Wrapper"
}, fe = {
  category: "hidden",
  detachable: !0,
  type: "container",
  icon: A,
  constraints: {
    relation: "ancestor",
    component: { $eq: "NavigationMenu" }
  },
  presetStyle: o,
  label: "Menu Viewport"
}, Me = {
  props: R
}, Ne = {
  props: X
}, be = {
  props: Y
}, xe = {
  props: Z
}, we = {
  props: ee
}, Ie = {
  props: te
}, ke = {
  props: ne
};
export {
  me as metaNavigationMenu,
  ve as metaNavigationMenuContent,
  ue as metaNavigationMenuItem,
  ye as metaNavigationMenuLink,
  ge as metaNavigationMenuList,
  he as metaNavigationMenuTrigger,
  fe as metaNavigationMenuViewport,
  Me as propsMetaNavigationMenu,
  xe as propsMetaNavigationMenuContent,
  Ne as propsMetaNavigationMenuItem,
  we as propsMetaNavigationMenuLink,
  Ie as propsMetaNavigationMenuList,
  be as propsMetaNavigationMenuTrigger,
  ke as propsMetaNavigationMenuViewport
};
