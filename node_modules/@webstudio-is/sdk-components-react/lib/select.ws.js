import { SelectIcon as e } from "@webstudio-is/icons/svg";
import { defaultStates as t } from "@webstudio-is/react-sdk";
import { select as n } from "@webstudio-is/sdk/normalize.css";
import { props as l } from "./__generated__/select.props.js";
const o = {
  select: [
    ...n,
    {
      property: "display",
      value: { type: "keyword", value: "block" }
    }
  ]
}, s = {
  category: "forms",
  constraints: {
    relation: "ancestor",
    component: { $nin: ["Button", "Link"] }
  },
  type: "container",
  description: "A drop-down menu for users to select a single option from a predefined list.",
  icon: e,
  presetStyle: o,
  order: 4,
  states: [
    ...t,
    { selector: "::placeholder", label: "Placeholder" },
    { selector: ":valid", label: "Valid" },
    { selector: ":invalid", label: "Invalid" },
    { selector: ":required", label: "Required" },
    { selector: ":optional", label: "Optional" }
  ],
  template: [
    {
      type: "instance",
      component: "Select",
      label: "Select",
      children: [
        {
          type: "instance",
          component: "Option",
          label: "Option",
          props: [
            { type: "string", name: "label", value: "Please choose an option" },
            { type: "string", name: "value", value: "" }
          ],
          children: []
        },
        {
          type: "instance",
          component: "Option",
          label: "Option",
          props: [
            { type: "string", name: "label", value: "Option A" },
            { type: "string", name: "value", value: "a" }
          ],
          children: []
        },
        {
          type: "instance",
          component: "Option",
          label: "Option",
          props: [
            { type: "string", name: "label", value: "Option B" },
            { type: "string", name: "value", value: "b" }
          ],
          children: []
        },
        {
          type: "instance",
          component: "Option",
          label: "Option",
          props: [
            { type: "string", name: "label", value: "Option C" },
            { type: "string", name: "value", value: "c" }
          ],
          children: []
        }
      ]
    }
  ]
}, c = {
  props: l,
  initialProps: [
    "id",
    "className",
    "name",
    "value",
    "multiple",
    "required",
    "autoFocus"
  ]
};
export {
  s as meta,
  c as propsMeta
};
