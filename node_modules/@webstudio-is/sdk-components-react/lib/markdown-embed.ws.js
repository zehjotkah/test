import { MarkdownEmbedIcon as n } from "@webstudio-is/icons/svg";
import { imagePlaceholderDataUrl as a } from "@webstudio-is/image";
import { descendantComponent as r } from "@webstudio-is/react-sdk";
import { props as s } from "./__generated__/markdown-embed.props.js";
const i = `
# Styling Markdown with Markdown Embed

Markdown Embed allows styling of Markdown, which primarily comes from external data.

## How to Use Markdown Embed

- Every element is shown in the Navigator.
- Apply styles and Tokens to each element.
- Adjustments to elements apply universally within this embed, ensuring consistency across your content.

---

## This sample text contains all the elements that can be styled.

Any elements that were not used above are used below.

### Heading 3
#### Heading 4
##### Heading 5
###### Heading 6

[Links](#) connect your content to relevant resources.

**Bold text** makes your important points stand out.

*Italic text* is great for emphasizing terms.

1. First Step
2. Second Step

![Image placeholder](${a})

> Capture attention with a powerful quote.

Using \`console.log("Hello World");\` will log to the console.
`.trim(), e = (t, o) => ({
  type: "instance",
  component: r,
  label: t,
  props: [{ type: "string", name: "selector", value: ` ${o}` }],
  children: []
}), m = {
  category: "data",
  type: "embed",
  description: "Used to add markdown code to the page",
  icon: n,
  presetStyle: {
    div: [
      {
        property: "display",
        value: { type: "keyword", value: "contents" }
      },
      {
        property: "whiteSpaceCollapse",
        value: { type: "keyword", value: "collapse" }
      }
    ]
  },
  order: 4,
  template: [
    {
      type: "instance",
      component: "MarkdownEmbed",
      props: [
        {
          name: "code",
          type: "string",
          value: i
        }
      ],
      children: [
        e("Paragraph", "p"),
        e("Heading 1", "h1"),
        e("Heading 2", "h2"),
        e("Heading 3", "h3"),
        e("Heading 4", "h4"),
        e("Heading 5", "h5"),
        e("Heading 6", "h6"),
        e("Bold", ":where(strong, b)"),
        e("Italic", ":where(em, i)"),
        e("Link", "a"),
        e("Image", "img"),
        e("Blockquote", "blockquote"),
        e("Code Text", "code"),
        e("List", ":where(ul, ol)"),
        e("List Item", "li"),
        e("Separator", "hr")
      ]
    }
  ]
}, g = {
  props: {
    ...s,
    code: {
      required: !0,
      control: "code",
      language: "markdown",
      type: "string"
    }
  },
  initialProps: ["className"]
};
export {
  m as meta,
  g as propsMeta
};
