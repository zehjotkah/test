import { jsxs as n, jsx as p } from "react/jsx-runtime";
import { ReactSdkContext as y } from "@webstudio-is/react-sdk/runtime";
import { forwardRef as b, useContext as h, createElement as u, Children as g } from "react";
const x = b(
  ({ tag: i = "", children: e, ...o }, c) => {
    const { renderer: f } = h(y), s = Object.entries(o).filter(
      ([t]) => t.startsWith("data-") === !1 && t.startsWith("aria-") === !1
    ).filter(([t]) => t !== "tabIndex").filter(([, t]) => typeof t != "function");
    if (f === void 0) {
      const t = Object.fromEntries(s);
      return u(i, t, e);
    }
    const r = g.toArray(e), l = r.length > 0 && r.every((t) => typeof t == "string"), a = i.replace(/^[^\p{L}_]+/u, "").replaceAll(/[^\p{L}\p{N}\-._:]+/gu, ""), d = s.map(
      ([t, m]) => `${t}=${JSON.stringify(m)}`
    );
    return /* @__PURE__ */ n("div", { ...o, children: [
      /* @__PURE__ */ n("span", { style: { color: "rgb(16, 23, 233)" }, children: [
        "<",
        [a, ...d].join(" "),
        ">"
      ] }),
      r.length > 0 && /* @__PURE__ */ p(
        "div",
        {
          ref: c,
          style: {
            display: l ? "inline" : "block",
            marginLeft: l ? 0 : "1rem"
          },
          children: e
        }
      ),
      /* @__PURE__ */ n("span", { style: { color: "rgb(16, 23, 233)" }, children: [
        "</",
        a,
        ">"
      ] })
    ] });
  }
);
x.displayName = "XmlNode";
export {
  x as XmlNode
};
