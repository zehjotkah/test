import { ContentEmbedIcon as n } from "@webstudio-is/icons/svg";
import { imagePlaceholderDataUrl as l } from "@webstudio-is/image";
import { descendantComponent as a } from "@webstudio-is/react-sdk";
const i = `
<h1>Styling HTML with Content Embed</h1>
<p>Content Embed allows styling of HTML, which primarily comes from external data.</p>
<h2>How to Use Content Embed</h2>
<ul>
  <li>Every element is shown in the Navigator.</li>
  <li>Apply styles and Tokens to each element.</li>
  <li>Adjustments to elements apply universally within this embed, ensuring consistency across your content.</li>
</ul>
<hr>
<h2>This sample text contains all the elements that can be styled.</h2>
<p>Any elements that were not used above are used below.</p>
<h3>Heading 3</h3>
<h4>Heading 4</h4>
<h5>Heading 5</h5>
<h6>Heading 6</h6>
<p><a href="#">Links</a> connect your content to relevant resources.</p>
<p><strong>Bold text</strong> makes your important points stand out.</p>
<p><em>Italic text</em> is great for emphasizing terms.</p>
<ol>
  <li>First Step</li>
  <li>Second Step</li>
</ol>
<img src="${l}">
<blockquote>Capture attention with a powerful quote.</blockquote>
<p>Using <code>console.log("Hello World");</code> will log to the console.</p>
`.trim(), e = (t, o) => ({
  type: "instance",
  component: a,
  label: t,
  props: [{ type: "string", name: "selector", value: ` ${o}` }],
  children: []
}), p = {
  category: "data",
  type: "control",
  description: "Content Embed allows styling of HTML, which can be provided via the Code property statically or loaded dynamically from any Resource, for example, from a CMS.",
  icon: n,
  order: 3,
  template: [
    {
      type: "instance",
      component: "HtmlEmbed",
      label: "Content Embed",
      props: [
        {
          name: "code",
          type: "string",
          value: i
        }
      ],
      children: [
        e("Paragraph", "p"),
        e("Heading 1", "h1"),
        e("Heading 2", "h2"),
        e("Heading 3", "h3"),
        e("Heading 4", "h4"),
        e("Heading 5", "h5"),
        e("Heading 6", "h6"),
        e("Bold", ":where(strong, b)"),
        e("Italic", ":where(em, i)"),
        e("Link", "a"),
        e("Image", "img"),
        e("Blockquote", "blockquote"),
        e("Code Text", "code"),
        e("List", ":where(ul, ol)"),
        e("List Item", "li"),
        e("Separator", "hr")
      ]
    }
  ]
};
export {
  p as meta
};
