import { z } from "zod";
export declare const FontFormat: z.ZodUnion<[z.ZodLiteral<"ttf">, z.ZodLiteral<"woff">, z.ZodLiteral<"woff2">]>;
export type FontFormat = z.infer<typeof FontFormat>;
declare const VariationAxes: z.ZodRecord<z.ZodEnum<["wght", "wdth", "slnt", "opsz", "ital", "GRAD", "XTRA", "XOPQ", "YOPQ", "YTLC", "YTUC", "YTAS", "YTDE", "YTFI"]>, z.ZodObject<{
    name: z.ZodString;
    min: z.ZodNumber;
    default: z.ZodNumber;
    max: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    name: string;
    min: number;
    default: number;
    max: number;
}, {
    name: string;
    min: number;
    default: number;
    max: number;
}>>;
export type VariationAxes = z.infer<typeof VariationAxes>;
export declare const FontMetaStatic: z.ZodObject<{
    family: z.ZodString;
    style: z.ZodEnum<["normal", "italic", "oblique"]>;
    weight: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    family: string;
    style: "normal" | "italic" | "oblique";
    weight: number;
}, {
    family: string;
    style: "normal" | "italic" | "oblique";
    weight: number;
}>;
export type FontMetaStatic = z.infer<typeof FontMetaStatic>;
export declare const FontMeta: z.ZodUnion<[z.ZodObject<{
    family: z.ZodString;
    style: z.ZodEnum<["normal", "italic", "oblique"]>;
    weight: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    family: string;
    style: "normal" | "italic" | "oblique";
    weight: number;
}, {
    family: string;
    style: "normal" | "italic" | "oblique";
    weight: number;
}>, z.ZodObject<{
    family: z.ZodString;
    variationAxes: z.ZodRecord<z.ZodEnum<["wght", "wdth", "slnt", "opsz", "ital", "GRAD", "XTRA", "XOPQ", "YOPQ", "YTLC", "YTUC", "YTAS", "YTDE", "YTFI"]>, z.ZodObject<{
        name: z.ZodString;
        min: z.ZodNumber;
        default: z.ZodNumber;
        max: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        name: string;
        min: number;
        default: number;
        max: number;
    }, {
        name: string;
        min: number;
        default: number;
        max: number;
    }>>;
}, "strip", z.ZodTypeAny, {
    family: string;
    variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
        name: string;
        min: number;
        default: number;
        max: number;
    }>>;
}, {
    family: string;
    variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
        name: string;
        min: number;
        default: number;
        max: number;
    }>>;
}>]>;
export type FontMeta = z.infer<typeof FontMeta>;
export {};
