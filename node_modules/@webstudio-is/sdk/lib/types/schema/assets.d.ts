import { z } from "zod";
export declare const FontAsset: z.ZodObject<{
    format: z.ZodUnion<[z.ZodLiteral<"ttf">, z.ZodLiteral<"woff">, z.ZodLiteral<"woff2">]>;
    meta: z.ZodUnion<[z.ZodObject<{
        family: z.ZodString;
        style: z.ZodEnum<["normal", "italic", "oblique"]>;
        weight: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    }, {
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    }>, z.ZodObject<{
        family: z.ZodString;
        variationAxes: z.ZodRecord<z.ZodEnum<["wght", "wdth", "slnt", "opsz", "ital", "GRAD", "XTRA", "XOPQ", "YOPQ", "YTLC", "YTUC", "YTAS", "YTDE", "YTFI"]>, z.ZodObject<{
            name: z.ZodString;
            min: z.ZodNumber;
            default: z.ZodNumber;
            max: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            name: string;
            min: number;
            default: number;
            max: number;
        }, {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }, "strip", z.ZodTypeAny, {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }, {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }>]>;
    type: z.ZodLiteral<"font">;
    id: z.ZodString;
    projectId: z.ZodString;
    size: z.ZodNumber;
    name: z.ZodString;
    description: z.ZodUnion<[z.ZodString, z.ZodNull]>;
    createdAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "font";
    id: string;
    name: string;
    format: "ttf" | "woff" | "woff2";
    meta: ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }) & ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    } | undefined);
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}, {
    type: "font";
    id: string;
    name: string;
    format: "ttf" | "woff" | "woff2";
    meta: ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }) & ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    } | undefined);
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}>;
export type FontAsset = z.infer<typeof FontAsset>;
export declare const ImageMeta: z.ZodObject<{
    width: z.ZodNumber;
    height: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    width: number;
    height: number;
}, {
    width: number;
    height: number;
}>;
export type ImageMeta = z.infer<typeof ImageMeta>;
export declare const ImageAsset: z.ZodObject<{
    format: z.ZodString;
    meta: z.ZodObject<{
        width: z.ZodNumber;
        height: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        width: number;
        height: number;
    }, {
        width: number;
        height: number;
    }>;
    type: z.ZodLiteral<"image">;
    id: z.ZodString;
    projectId: z.ZodString;
    size: z.ZodNumber;
    name: z.ZodString;
    description: z.ZodUnion<[z.ZodString, z.ZodNull]>;
    createdAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "image";
    id: string;
    name: string;
    format: string;
    meta: {
        width: number;
        height: number;
    };
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}, {
    type: "image";
    id: string;
    name: string;
    format: string;
    meta: {
        width: number;
        height: number;
    };
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}>;
export type ImageAsset = z.infer<typeof ImageAsset>;
export declare const Asset: z.ZodUnion<[z.ZodObject<{
    format: z.ZodUnion<[z.ZodLiteral<"ttf">, z.ZodLiteral<"woff">, z.ZodLiteral<"woff2">]>;
    meta: z.ZodUnion<[z.ZodObject<{
        family: z.ZodString;
        style: z.ZodEnum<["normal", "italic", "oblique"]>;
        weight: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    }, {
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    }>, z.ZodObject<{
        family: z.ZodString;
        variationAxes: z.ZodRecord<z.ZodEnum<["wght", "wdth", "slnt", "opsz", "ital", "GRAD", "XTRA", "XOPQ", "YOPQ", "YTLC", "YTUC", "YTAS", "YTDE", "YTFI"]>, z.ZodObject<{
            name: z.ZodString;
            min: z.ZodNumber;
            default: z.ZodNumber;
            max: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            name: string;
            min: number;
            default: number;
            max: number;
        }, {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }, "strip", z.ZodTypeAny, {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }, {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }>]>;
    type: z.ZodLiteral<"font">;
    id: z.ZodString;
    projectId: z.ZodString;
    size: z.ZodNumber;
    name: z.ZodString;
    description: z.ZodUnion<[z.ZodString, z.ZodNull]>;
    createdAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "font";
    id: string;
    name: string;
    format: "ttf" | "woff" | "woff2";
    meta: ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }) & ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    } | undefined);
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}, {
    type: "font";
    id: string;
    name: string;
    format: "ttf" | "woff" | "woff2";
    meta: ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }) & ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    } | undefined);
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}>, z.ZodObject<{
    format: z.ZodString;
    meta: z.ZodObject<{
        width: z.ZodNumber;
        height: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        width: number;
        height: number;
    }, {
        width: number;
        height: number;
    }>;
    type: z.ZodLiteral<"image">;
    id: z.ZodString;
    projectId: z.ZodString;
    size: z.ZodNumber;
    name: z.ZodString;
    description: z.ZodUnion<[z.ZodString, z.ZodNull]>;
    createdAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "image";
    id: string;
    name: string;
    format: string;
    meta: {
        width: number;
        height: number;
    };
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}, {
    type: "image";
    id: string;
    name: string;
    format: string;
    meta: {
        width: number;
        height: number;
    };
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}>]>;
export type Asset = z.infer<typeof Asset>;
export declare const Assets: z.ZodMap<z.ZodString, z.ZodUnion<[z.ZodObject<{
    format: z.ZodUnion<[z.ZodLiteral<"ttf">, z.ZodLiteral<"woff">, z.ZodLiteral<"woff2">]>;
    meta: z.ZodUnion<[z.ZodObject<{
        family: z.ZodString;
        style: z.ZodEnum<["normal", "italic", "oblique"]>;
        weight: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    }, {
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    }>, z.ZodObject<{
        family: z.ZodString;
        variationAxes: z.ZodRecord<z.ZodEnum<["wght", "wdth", "slnt", "opsz", "ital", "GRAD", "XTRA", "XOPQ", "YOPQ", "YTLC", "YTUC", "YTAS", "YTDE", "YTFI"]>, z.ZodObject<{
            name: z.ZodString;
            min: z.ZodNumber;
            default: z.ZodNumber;
            max: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            name: string;
            min: number;
            default: number;
            max: number;
        }, {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }, "strip", z.ZodTypeAny, {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }, {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }>]>;
    type: z.ZodLiteral<"font">;
    id: z.ZodString;
    projectId: z.ZodString;
    size: z.ZodNumber;
    name: z.ZodString;
    description: z.ZodUnion<[z.ZodString, z.ZodNull]>;
    createdAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "font";
    id: string;
    name: string;
    format: "ttf" | "woff" | "woff2";
    meta: ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }) & ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    } | undefined);
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}, {
    type: "font";
    id: string;
    name: string;
    format: "ttf" | "woff" | "woff2";
    meta: ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    }) & ({
        family: string;
        style: "normal" | "italic" | "oblique";
        weight: number;
    } | {
        family: string;
        variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
            name: string;
            min: number;
            default: number;
            max: number;
        }>>;
    } | undefined);
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}>, z.ZodObject<{
    format: z.ZodString;
    meta: z.ZodObject<{
        width: z.ZodNumber;
        height: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        width: number;
        height: number;
    }, {
        width: number;
        height: number;
    }>;
    type: z.ZodLiteral<"image">;
    id: z.ZodString;
    projectId: z.ZodString;
    size: z.ZodNumber;
    name: z.ZodString;
    description: z.ZodUnion<[z.ZodString, z.ZodNull]>;
    createdAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "image";
    id: string;
    name: string;
    format: string;
    meta: {
        width: number;
        height: number;
    };
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}, {
    type: "image";
    id: string;
    name: string;
    format: string;
    meta: {
        width: number;
        height: number;
    };
    projectId: string;
    size: number;
    description: string | null;
    createdAt: string;
}>]>>;
export type Assets = z.infer<typeof Assets>;
