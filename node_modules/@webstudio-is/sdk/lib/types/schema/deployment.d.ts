import { z } from "zod";
export declare const Templates: z.ZodEnum<["vanilla", "vercel", "netlify-functions", "netlify-edge-functions", "ssg", "ssg-netlify", "ssg-vercel"]>;
export type Templates = z.infer<typeof Templates>;
export declare const Deployment: z.ZodUnion<[z.ZodObject<{
    destination: z.ZodLiteral<"static">;
    name: z.ZodString;
    assetsDomain: z.ZodString;
    templates: z.ZodArray<z.ZodEnum<["vanilla", "vercel", "netlify-functions", "netlify-edge-functions", "ssg", "ssg-netlify", "ssg-vercel"]>, "many">;
}, "strip", z.ZodTypeAny, {
    name: string;
    destination: "static";
    assetsDomain: string;
    templates: ("vanilla" | "vercel" | "netlify-functions" | "netlify-edge-functions" | "ssg" | "ssg-netlify" | "ssg-vercel")[];
}, {
    name: string;
    destination: "static";
    assetsDomain: string;
    templates: ("vanilla" | "vercel" | "netlify-functions" | "netlify-edge-functions" | "ssg" | "ssg-netlify" | "ssg-vercel")[];
}>, z.ZodObject<{
    destination: z.ZodOptional<z.ZodLiteral<"saas">>;
    domains: z.ZodArray<z.ZodString, "many">;
    assetsDomain: z.ZodOptional<z.ZodString>;
    /**
     * @deprecated This field is deprecated, use `domains` instead.
     */
    projectDomain: z.ZodOptional<z.ZodString>;
    excludeWstdDomainFromSearch: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    domains: string[];
    destination?: "saas" | undefined;
    assetsDomain?: string | undefined;
    projectDomain?: string | undefined;
    excludeWstdDomainFromSearch?: boolean | undefined;
}, {
    domains: string[];
    destination?: "saas" | undefined;
    assetsDomain?: string | undefined;
    projectDomain?: string | undefined;
    excludeWstdDomainFromSearch?: boolean | undefined;
}>]>;
export type Deployment = z.infer<typeof Deployment>;
