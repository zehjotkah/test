import { z } from "zod";
import { Assets } from "./assets";
import { DataSources } from "./data-sources";
import { Resources } from "./resources";
import { Instances } from "./instances";
import { Props } from "./props";
import { Breakpoints } from "./breakpoints";
import { StyleSourceSelections } from "./style-source-selections";
import { StyleSources } from "./style-sources";
import { Styles } from "./styles";
import { Pages } from "./pages";
/**
 * transferrable and insertable part of webstudio data
 * may contain reusable parts like tokens and custom components
 */
export declare const WebstudioFragment: z.ZodObject<{
    children: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"id">;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "id";
    }, {
        value: string;
        type: "id";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"text">;
        value: z.ZodString;
        placeholder: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "text";
        placeholder?: boolean | undefined;
    }, {
        value: string;
        type: "text";
        placeholder?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"expression">;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "expression";
    }, {
        value: string;
        type: "expression";
    }>]>, "many">;
    instances: z.ZodArray<z.ZodObject<{
        type: z.ZodLiteral<"instance">;
        id: z.ZodString;
        component: z.ZodString;
        label: z.ZodOptional<z.ZodString>;
        children: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"id">;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "id";
        }, {
            value: string;
            type: "id";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"text">;
            value: z.ZodString;
            placeholder: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "text";
            placeholder?: boolean | undefined;
        }, {
            value: string;
            type: "text";
            placeholder?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"expression">;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "expression";
        }, {
            value: string;
            type: "expression";
        }>]>, "many">;
    }, "strip", z.ZodTypeAny, {
        type: "instance";
        id: string;
        children: ({
            value: string;
            type: "text";
            placeholder?: boolean | undefined;
        } | {
            value: string;
            type: "id";
        } | {
            value: string;
            type: "expression";
        })[];
        component: string;
        label?: string | undefined;
    }, {
        type: "instance";
        id: string;
        children: ({
            value: string;
            type: "text";
            placeholder?: boolean | undefined;
        } | {
            value: string;
            type: "id";
        } | {
            value: string;
            type: "expression";
        })[];
        component: string;
        label?: string | undefined;
    }>, "many">;
    assets: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        format: z.ZodUnion<[z.ZodLiteral<"ttf">, z.ZodLiteral<"woff">, z.ZodLiteral<"woff2">]>;
        meta: z.ZodUnion<[z.ZodObject<{
            family: z.ZodString;
            style: z.ZodEnum<["normal", "italic", "oblique"]>;
            weight: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            family: string;
            style: "normal" | "italic" | "oblique";
            weight: number;
        }, {
            family: string;
            style: "normal" | "italic" | "oblique";
            weight: number;
        }>, z.ZodObject<{
            family: z.ZodString;
            variationAxes: z.ZodRecord<z.ZodEnum<["wght", "wdth", "slnt", "opsz", "ital", "GRAD", "XTRA", "XOPQ", "YOPQ", "YTLC", "YTUC", "YTAS", "YTDE", "YTFI"]>, z.ZodObject<{
                name: z.ZodString;
                min: z.ZodNumber;
                default: z.ZodNumber;
                max: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                name: string;
                min: number;
                default: number;
                max: number;
            }, {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        }, "strip", z.ZodTypeAny, {
            family: string;
            variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        }, {
            family: string;
            variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        }>]>;
        type: z.ZodLiteral<"font">;
        id: z.ZodString;
        projectId: z.ZodString;
        size: z.ZodNumber;
        name: z.ZodString;
        description: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        createdAt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "font";
        id: string;
        name: string;
        format: "ttf" | "woff" | "woff2";
        meta: ({
            family: string;
            style: "normal" | "italic" | "oblique";
            weight: number;
        } | {
            family: string;
            variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        }) & ({
            family: string;
            style: "normal" | "italic" | "oblique";
            weight: number;
        } | {
            family: string;
            variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        } | undefined);
        projectId: string;
        size: number;
        description: string | null;
        createdAt: string;
    }, {
        type: "font";
        id: string;
        name: string;
        format: "ttf" | "woff" | "woff2";
        meta: ({
            family: string;
            style: "normal" | "italic" | "oblique";
            weight: number;
        } | {
            family: string;
            variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        }) & ({
            family: string;
            style: "normal" | "italic" | "oblique";
            weight: number;
        } | {
            family: string;
            variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        } | undefined);
        projectId: string;
        size: number;
        description: string | null;
        createdAt: string;
    }>, z.ZodObject<{
        format: z.ZodString;
        meta: z.ZodObject<{
            width: z.ZodNumber;
            height: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            width: number;
            height: number;
        }, {
            width: number;
            height: number;
        }>;
        type: z.ZodLiteral<"image">;
        id: z.ZodString;
        projectId: z.ZodString;
        size: z.ZodNumber;
        name: z.ZodString;
        description: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        createdAt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "image";
        id: string;
        name: string;
        format: string;
        meta: {
            width: number;
            height: number;
        };
        projectId: string;
        size: number;
        description: string | null;
        createdAt: string;
    }, {
        type: "image";
        id: string;
        name: string;
        format: string;
        meta: {
            width: number;
            height: number;
        };
        projectId: string;
        size: number;
        description: string | null;
        createdAt: string;
    }>]>, "many">;
    dataSources: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"variable">;
        id: z.ZodString;
        scopeInstanceId: z.ZodOptional<z.ZodString>;
        name: z.ZodString;
        value: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"number">;
            value: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            value: number;
            type: "number";
        }, {
            value: number;
            type: "number";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "string";
        }, {
            value: string;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            value: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            value: boolean;
            type: "boolean";
        }, {
            value: boolean;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string[]">;
            value: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            value: string[];
            type: "string[]";
        }, {
            value: string[];
            type: "string[]";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"json">;
            value: z.ZodUnknown;
        }, "strip", z.ZodTypeAny, {
            type: "json";
            value?: unknown;
        }, {
            type: "json";
            value?: unknown;
        }>]>;
    }, "strip", z.ZodTypeAny, {
        value: {
            value: number;
            type: "number";
        } | {
            value: string;
            type: "string";
        } | {
            value: boolean;
            type: "boolean";
        } | {
            value: string[];
            type: "string[]";
        } | {
            type: "json";
            value?: unknown;
        };
        type: "variable";
        id: string;
        name: string;
        scopeInstanceId?: string | undefined;
    }, {
        value: {
            value: number;
            type: "number";
        } | {
            value: string;
            type: "string";
        } | {
            value: boolean;
            type: "boolean";
        } | {
            value: string[];
            type: "string[]";
        } | {
            type: "json";
            value?: unknown;
        };
        type: "variable";
        id: string;
        name: string;
        scopeInstanceId?: string | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"parameter">;
        id: z.ZodString;
        scopeInstanceId: z.ZodOptional<z.ZodString>;
        name: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "parameter";
        id: string;
        name: string;
        scopeInstanceId?: string | undefined;
    }, {
        type: "parameter";
        id: string;
        name: string;
        scopeInstanceId?: string | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"resource">;
        id: z.ZodString;
        scopeInstanceId: z.ZodOptional<z.ZodString>;
        name: z.ZodString;
        resourceId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "resource";
        id: string;
        name: string;
        resourceId: string;
        scopeInstanceId?: string | undefined;
    }, {
        type: "resource";
        id: string;
        name: string;
        resourceId: string;
        scopeInstanceId?: string | undefined;
    }>]>, "many">;
    resources: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        control: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"system">, z.ZodLiteral<"graphql">]>>;
        method: z.ZodUnion<[z.ZodLiteral<"get">, z.ZodLiteral<"post">, z.ZodLiteral<"put">, z.ZodLiteral<"delete">]>;
        url: z.ZodString;
        headers: z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            name: string;
        }, {
            value: string;
            name: string;
        }>, "many">;
        body: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        name: string;
        method: "get" | "post" | "put" | "delete";
        url: string;
        headers: {
            value: string;
            name: string;
        }[];
        control?: "system" | "graphql" | undefined;
        body?: string | undefined;
    }, {
        id: string;
        name: string;
        method: "get" | "post" | "put" | "delete";
        url: string;
        headers: {
            value: string;
            name: string;
        }[];
        control?: "system" | "graphql" | undefined;
        body?: string | undefined;
    }>, "many">;
    props: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"number">;
        value: z.ZodNumber;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: number;
        type: "number";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }, {
        value: number;
        type: "number";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"string">;
        value: z.ZodString;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "string";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }, {
        value: string;
        type: "string";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"boolean">;
        value: z.ZodBoolean;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: boolean;
        type: "boolean";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }, {
        value: boolean;
        type: "boolean";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"json">;
        value: z.ZodUnknown;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "json";
        id: string;
        name: string;
        instanceId: string;
        value?: unknown;
        required?: boolean | undefined;
    }, {
        type: "json";
        id: string;
        name: string;
        instanceId: string;
        value?: unknown;
        required?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"asset">;
        value: z.ZodString;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "asset";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }, {
        value: string;
        type: "asset";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"page">;
        value: z.ZodUnion<[z.ZodString, z.ZodObject<{
            pageId: z.ZodString;
            instanceId: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            instanceId: string;
            pageId: string;
        }, {
            instanceId: string;
            pageId: string;
        }>]>;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: (string | {
            instanceId: string;
            pageId: string;
        }) & (string | {
            instanceId: string;
            pageId: string;
        } | undefined);
        type: "page";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }, {
        value: (string | {
            instanceId: string;
            pageId: string;
        }) & (string | {
            instanceId: string;
            pageId: string;
        } | undefined);
        type: "page";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"string[]">;
        value: z.ZodArray<z.ZodString, "many">;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string[];
        type: "string[]";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }, {
        value: string[];
        type: "string[]";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"parameter">;
        value: z.ZodString;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "parameter";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }, {
        value: string;
        type: "parameter";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"resource">;
        value: z.ZodString;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "resource";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }, {
        value: string;
        type: "resource";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"expression">;
        value: z.ZodString;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "expression";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }, {
        value: string;
        type: "expression";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"action">;
        value: z.ZodArray<z.ZodObject<{
            type: z.ZodLiteral<"execute">;
            args: z.ZodArray<z.ZodString, "many">;
            code: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            code: string;
            type: "execute";
            args: string[];
        }, {
            code: string;
            type: "execute";
            args: string[];
        }>, "many">;
        id: z.ZodString;
        instanceId: z.ZodString;
        name: z.ZodString;
        required: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: {
            code: string;
            type: "execute";
            args: string[];
        }[];
        type: "action";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }, {
        value: {
            code: string;
            type: "execute";
            args: string[];
        }[];
        type: "action";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    }>]>, "many">;
    breakpoints: z.ZodArray<z.ZodEffects<z.ZodObject<{
        id: z.ZodString;
        label: z.ZodString;
        minWidth: z.ZodOptional<z.ZodNumber>;
        maxWidth: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        label: string;
        minWidth?: number | undefined;
        maxWidth?: number | undefined;
    }, {
        id: string;
        label: string;
        minWidth?: number | undefined;
        maxWidth?: number | undefined;
    }>, {
        id: string;
        label: string;
        minWidth?: number | undefined;
        maxWidth?: number | undefined;
    }, {
        id: string;
        label: string;
        minWidth?: number | undefined;
        maxWidth?: number | undefined;
    }>, "many">;
    styleSourceSelections: z.ZodArray<z.ZodObject<{
        instanceId: z.ZodString;
        values: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        values: string[];
        instanceId: string;
    }, {
        values: string[];
        instanceId: string;
    }>, "many">;
    styleSources: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"token">;
        id: z.ZodString;
        name: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "token";
        id: string;
        name: string;
    }, {
        type: "token";
        id: string;
        name: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"local">;
        id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "local";
        id: string;
    }, {
        type: "local";
        id: string;
    }>]>, "many">;
    styles: z.ZodArray<z.ZodType<{
        value: {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            b: number;
            r: number;
            g: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: import("@webstudio-is/css-engine").StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: import("@webstudio-is/css-engine").StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: import("@webstudio-is/css-engine").StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: import("@webstudio-is/css-engine").StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        b: number;
                        r: number;
                        g: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            })[];
            type: "layers";
            hidden?: boolean | undefined;
        } | {
            value: string[];
            type: "fontFamily";
            hidden?: boolean | undefined;
        } | {
            type: "guaranteedInvalid";
            hidden?: boolean | undefined;
        } | {
            value: "";
            type: "unset";
            hidden?: boolean | undefined;
        };
        styleSourceId: string;
        breakpointId: string;
        state?: string | undefined;
        listed?: boolean | undefined;
        property: import("@webstudio-is/css-engine").StyleProperty;
    }, z.ZodTypeDef, {
        value: {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            b: number;
            r: number;
            g: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: import("@webstudio-is/css-engine").StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: import("@webstudio-is/css-engine").StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: import("@webstudio-is/css-engine").StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: import("@webstudio-is/css-engine").StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        b: number;
                        r: number;
                        g: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            })[];
            type: "layers";
            hidden?: boolean | undefined;
        } | {
            value: string[];
            type: "fontFamily";
            hidden?: boolean | undefined;
        } | {
            type: "guaranteedInvalid";
            hidden?: boolean | undefined;
        } | {
            value: "";
            type: "unset";
            hidden?: boolean | undefined;
        };
        styleSourceId: string;
        breakpointId: string;
        state?: string | undefined;
        listed?: boolean | undefined;
        property: import("@webstudio-is/css-engine").StyleProperty;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    dataSources: ({
        value: {
            value: number;
            type: "number";
        } | {
            value: string;
            type: "string";
        } | {
            value: boolean;
            type: "boolean";
        } | {
            value: string[];
            type: "string[]";
        } | {
            type: "json";
            value?: unknown;
        };
        type: "variable";
        id: string;
        name: string;
        scopeInstanceId?: string | undefined;
    } | {
        type: "parameter";
        id: string;
        name: string;
        scopeInstanceId?: string | undefined;
    } | {
        type: "resource";
        id: string;
        name: string;
        resourceId: string;
        scopeInstanceId?: string | undefined;
    })[];
    children: ({
        value: string;
        type: "text";
        placeholder?: boolean | undefined;
    } | {
        value: string;
        type: "id";
    } | {
        value: string;
        type: "expression";
    })[];
    instances: {
        type: "instance";
        id: string;
        children: ({
            value: string;
            type: "text";
            placeholder?: boolean | undefined;
        } | {
            value: string;
            type: "id";
        } | {
            value: string;
            type: "expression";
        })[];
        component: string;
        label?: string | undefined;
    }[];
    assets: ({
        type: "font";
        id: string;
        name: string;
        format: "ttf" | "woff" | "woff2";
        meta: ({
            family: string;
            style: "normal" | "italic" | "oblique";
            weight: number;
        } | {
            family: string;
            variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        }) & ({
            family: string;
            style: "normal" | "italic" | "oblique";
            weight: number;
        } | {
            family: string;
            variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        } | undefined);
        projectId: string;
        size: number;
        description: string | null;
        createdAt: string;
    } | {
        type: "image";
        id: string;
        name: string;
        format: string;
        meta: {
            width: number;
            height: number;
        };
        projectId: string;
        size: number;
        description: string | null;
        createdAt: string;
    })[];
    resources: {
        id: string;
        name: string;
        method: "get" | "post" | "put" | "delete";
        url: string;
        headers: {
            value: string;
            name: string;
        }[];
        control?: "system" | "graphql" | undefined;
        body?: string | undefined;
    }[];
    props: ({
        value: number;
        type: "number";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: string;
        type: "string";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: boolean;
        type: "boolean";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        type: "json";
        id: string;
        name: string;
        instanceId: string;
        value?: unknown;
        required?: boolean | undefined;
    } | {
        value: string;
        type: "asset";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: (string | {
            instanceId: string;
            pageId: string;
        }) & (string | {
            instanceId: string;
            pageId: string;
        } | undefined);
        type: "page";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: string[];
        type: "string[]";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: string;
        type: "parameter";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: string;
        type: "resource";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: string;
        type: "expression";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: {
            code: string;
            type: "execute";
            args: string[];
        }[];
        type: "action";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    })[];
    breakpoints: {
        id: string;
        label: string;
        minWidth?: number | undefined;
        maxWidth?: number | undefined;
    }[];
    styleSourceSelections: {
        values: string[];
        instanceId: string;
    }[];
    styleSources: ({
        type: "token";
        id: string;
        name: string;
    } | {
        type: "local";
        id: string;
    })[];
    styles: {
        value: {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            b: number;
            r: number;
            g: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: import("@webstudio-is/css-engine").StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: import("@webstudio-is/css-engine").StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: import("@webstudio-is/css-engine").StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: import("@webstudio-is/css-engine").StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        b: number;
                        r: number;
                        g: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            })[];
            type: "layers";
            hidden?: boolean | undefined;
        } | {
            value: string[];
            type: "fontFamily";
            hidden?: boolean | undefined;
        } | {
            type: "guaranteedInvalid";
            hidden?: boolean | undefined;
        } | {
            value: "";
            type: "unset";
            hidden?: boolean | undefined;
        };
        styleSourceId: string;
        breakpointId: string;
        state?: string | undefined;
        listed?: boolean | undefined;
        property: import("@webstudio-is/css-engine").StyleProperty;
    }[];
}, {
    dataSources: ({
        value: {
            value: number;
            type: "number";
        } | {
            value: string;
            type: "string";
        } | {
            value: boolean;
            type: "boolean";
        } | {
            value: string[];
            type: "string[]";
        } | {
            type: "json";
            value?: unknown;
        };
        type: "variable";
        id: string;
        name: string;
        scopeInstanceId?: string | undefined;
    } | {
        type: "parameter";
        id: string;
        name: string;
        scopeInstanceId?: string | undefined;
    } | {
        type: "resource";
        id: string;
        name: string;
        resourceId: string;
        scopeInstanceId?: string | undefined;
    })[];
    children: ({
        value: string;
        type: "text";
        placeholder?: boolean | undefined;
    } | {
        value: string;
        type: "id";
    } | {
        value: string;
        type: "expression";
    })[];
    instances: {
        type: "instance";
        id: string;
        children: ({
            value: string;
            type: "text";
            placeholder?: boolean | undefined;
        } | {
            value: string;
            type: "id";
        } | {
            value: string;
            type: "expression";
        })[];
        component: string;
        label?: string | undefined;
    }[];
    assets: ({
        type: "font";
        id: string;
        name: string;
        format: "ttf" | "woff" | "woff2";
        meta: ({
            family: string;
            style: "normal" | "italic" | "oblique";
            weight: number;
        } | {
            family: string;
            variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        }) & ({
            family: string;
            style: "normal" | "italic" | "oblique";
            weight: number;
        } | {
            family: string;
            variationAxes: Partial<Record<"wght" | "wdth" | "slnt" | "opsz" | "ital" | "GRAD" | "XTRA" | "XOPQ" | "YOPQ" | "YTLC" | "YTUC" | "YTAS" | "YTDE" | "YTFI", {
                name: string;
                min: number;
                default: number;
                max: number;
            }>>;
        } | undefined);
        projectId: string;
        size: number;
        description: string | null;
        createdAt: string;
    } | {
        type: "image";
        id: string;
        name: string;
        format: string;
        meta: {
            width: number;
            height: number;
        };
        projectId: string;
        size: number;
        description: string | null;
        createdAt: string;
    })[];
    resources: {
        id: string;
        name: string;
        method: "get" | "post" | "put" | "delete";
        url: string;
        headers: {
            value: string;
            name: string;
        }[];
        control?: "system" | "graphql" | undefined;
        body?: string | undefined;
    }[];
    props: ({
        value: number;
        type: "number";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: string;
        type: "string";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: boolean;
        type: "boolean";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        type: "json";
        id: string;
        name: string;
        instanceId: string;
        value?: unknown;
        required?: boolean | undefined;
    } | {
        value: string;
        type: "asset";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: (string | {
            instanceId: string;
            pageId: string;
        }) & (string | {
            instanceId: string;
            pageId: string;
        } | undefined);
        type: "page";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: string[];
        type: "string[]";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: string;
        type: "parameter";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: string;
        type: "resource";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: string;
        type: "expression";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    } | {
        value: {
            code: string;
            type: "execute";
            args: string[];
        }[];
        type: "action";
        id: string;
        name: string;
        instanceId: string;
        required?: boolean | undefined;
    })[];
    breakpoints: {
        id: string;
        label: string;
        minWidth?: number | undefined;
        maxWidth?: number | undefined;
    }[];
    styleSourceSelections: {
        values: string[];
        instanceId: string;
    }[];
    styleSources: ({
        type: "token";
        id: string;
        name: string;
    } | {
        type: "local";
        id: string;
    })[];
    styles: {
        value: {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            b: number;
            r: number;
            g: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: import("@webstudio-is/css-engine").StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: import("@webstudio-is/css-engine").StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                b: number;
                r: number;
                g: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: import("@webstudio-is/css-engine").StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    b: number;
                    r: number;
                    g: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: import("@webstudio-is/css-engine").StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        b: number;
                        r: number;
                        g: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            })[];
            type: "layers";
            hidden?: boolean | undefined;
        } | {
            value: string[];
            type: "fontFamily";
            hidden?: boolean | undefined;
        } | {
            type: "guaranteedInvalid";
            hidden?: boolean | undefined;
        } | {
            value: "";
            type: "unset";
            hidden?: boolean | undefined;
        };
        styleSourceId: string;
        breakpointId: string;
        state?: string | undefined;
        listed?: boolean | undefined;
        property: import("@webstudio-is/css-engine").StyleProperty;
    }[];
}>;
export type WebstudioFragment = z.infer<typeof WebstudioFragment>;
/**
 * all persisted webstudio data in normalized format
 * should be used for composing parts of logic within
 * single transaction
 */
export type WebstudioData = {
    pages: Pages;
    assets: Assets;
    dataSources: DataSources;
    resources: Resources;
    instances: Instances;
    props: Props;
    breakpoints: Breakpoints;
    styleSourceSelections: StyleSourceSelections;
    styleSources: StyleSources;
    styles: Styles;
};
