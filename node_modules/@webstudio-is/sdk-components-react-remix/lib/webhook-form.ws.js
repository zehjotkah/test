import { Form as t } from "@webstudio-is/sdk-components-react/metas";
import { showAttribute as e } from "@webstudio-is/react-sdk";
import { props as o } from "./__generated__/webhook-form.props.js";
import { WebhookFormIcon as a } from "@webstudio-is/icons/svg";
const c = {
  ...t,
  category: "data",
  label: "Webhook Form",
  description: "Collect user data and send it to any webhook.",
  order: 1,
  icon: a,
  states: [
    { selector: "[data-state=error]", label: "Error" },
    { selector: "[data-state=success]", label: "Success" }
  ],
  template: [
    {
      type: "instance",
      component: "Form",
      variables: {
        formState: { initialValue: "initial" }
      },
      props: [
        {
          type: "expression",
          name: "state",
          code: "formState"
        },
        {
          type: "action",
          name: "onStateChange",
          value: [
            { type: "execute", args: ["state"], code: "formState = state" }
          ]
        }
      ],
      children: [
        {
          type: "instance",
          label: "Form Content",
          component: "Box",
          props: [
            {
              type: "expression",
              name: e,
              code: "formState === 'initial' || formState === 'error'"
            }
          ],
          children: [
            {
              type: "instance",
              component: "Label",
              children: [{ type: "text", value: "Name", placeholder: !0 }]
            },
            {
              type: "instance",
              component: "Input",
              props: [{ type: "string", name: "name", value: "name" }],
              children: []
            },
            {
              type: "instance",
              component: "Label",
              children: [{ type: "text", value: "Email", placeholder: !0 }]
            },
            {
              type: "instance",
              component: "Input",
              props: [{ type: "string", name: "name", value: "email" }],
              children: []
            },
            {
              type: "instance",
              component: "Button",
              children: [{ type: "text", value: "Submit", placeholder: !0 }]
            }
          ]
        },
        {
          type: "instance",
          label: "Success Message",
          component: "Box",
          props: [
            {
              type: "expression",
              name: e,
              code: "formState === 'success'"
            }
          ],
          children: [
            {
              type: "text",
              value: "Thank you for getting in touch!",
              placeholder: !0
            }
          ]
        },
        {
          type: "instance",
          label: "Error Message",
          component: "Box",
          props: [
            {
              type: "expression",
              name: e,
              code: "formState === 'error'"
            }
          ],
          children: [
            {
              type: "text",
              value: "Sorry, something went wrong.",
              placeholder: !0
            }
          ]
        }
      ]
    }
  ]
}, i = {
  props: o,
  initialProps: ["id", "className", "state", "action"]
};
export {
  c as meta,
  i as propsMeta
};
